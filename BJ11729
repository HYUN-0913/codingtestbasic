def count(N):
    if N == 1:
        return 1
    else:
        return (count(N-1) * 2 + 1) 

# 첫번째(N)는 원판의 수이고, 나머지 세 개는 출발지, 목적지, 경유지로 구분해서 A, C, B를 변수로 두었다.
def hanoi(N, A, C, B):
    if N == 1:
        print(A, C) # 한 개 일 땐 A에서 C로 옮긴다
    else: # n이 1보다 큰 값일 때를 정의
        hanoi(N-1, A, B, C) # 가장 큰 원판 하나를 제외한 n-1개를 A에서 B로 C를 거쳐 옮겨라
        print(A, C) # 가장 큰 원판을 A에서 C로 옮겨라
        hanoi(N-1, B, C, A) # 이동된 n-1개의 원판을 B에서 C로 A를 거쳐서 옮김, 
#그러면 재귀 함수에 의해 n이 작아지면서 계속 함수를 호출, 마지막 n=1이 되면 함수를 빠져나온다.
    
N = int(input())
print(count(N))  # n개의 원판을 이동하는 횟수= 2**n-1
hanoi(N, 1, 3, 2) # 문제에서는 A = 1, B = 2, C = 3으로 되어 있다.
